{
    "address": "0x706A6351a3E97f28A32CC4c28959E9B33eFE2D89",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "priceFeedAddress",
                    "type": "address"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "inputs": [],
            "name": "FundMe__NotOwner",
            "type": "error"
        },
        {
            "stateMutability": "payable",
            "type": "fallback"
        },
        {
            "inputs": [],
            "name": "MINIMUM_USD",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "cheaperWithdraw",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "fund",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "funder",
                    "type": "address"
                }
            ],
            "name": "getAddressToAmountFunded",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "index",
                    "type": "uint256"
                }
            ],
            "name": "getFunders",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getOwner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getPriceFeed",
            "outputs": [
                {
                    "internalType": "contract AggregatorV3Interface",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "withdraw",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "stateMutability": "payable",
            "type": "receive"
        }
    ],
    "transactionHash": "0x22ce9a963bc00a022dbfeede581f1d785ccb45a1f1927750497f72cd6273def1",
    "receipt": {
        "to": null,
        "from": "0xE2314597c13d22A8BF2919ff65758af81F4A4794",
        "contractAddress": "0x706A6351a3E97f28A32CC4c28959E9B33eFE2D89",
        "transactionIndex": 54,
        "gasUsed": "1047887",
        "logsBloom": "0x
        "blockHash": "0x9701c4458c70dfa08ff66c6cc9e7981ddd53ded081870152134f9374b41aa90d",
        "transactionHash": "0x22ce9a963bc00a022dbfeede581f1d785ccb45a1f1927750497f72cd6273def1",
        "logs": [],
        "blockNumber": 7723511,
        "cumulativeGasUsed": "15961846",
        "status": 1,
        "byzantium": true
    },
    "args": ["0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"],
    "numDeployments": 2,
    "solcInputHash": "d26bad2ec533d118971544483d507504",
    "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Surinder Kumar\",\"details\":\"This implements price feeds as our library\",\"kind\":\"dev\",\"methods\":{\"fund()\":{\"details\":\"This implements price feeds as our library\"}},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"This function funds this contract\"}},\"notice\":\"This contract is to demo a simple funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n//pragma\\npragma solidity ^0.8.7;\\n\\n//imports\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\n//Error codes\\nerror FundMe__NotOwner();\\n\\n//Interfaces, Libraries, Contracts\\n\\n/// or\\n/** @title A contract for crowd funding\\n * @author Surinder Kumar\\n * @notice  This contract is to demo a simple funding contract\\n * @dev This implements price feeds as our library\\n */\\ncontract FundMe {\\n    //Type Declarations\\n    using PriceConverter for uint256;\\n\\n    //State variables\\n    address[] private s_funders;\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n\\n    //constants\\n    address private immutable i_owner;\\n    uint256 public constant MINIMUM_USD = 5 * 1e18;\\n\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    //Modifier\\n    modifier onlyOwner() {\\n        //require(msg.sender == i_owner, \\\"Sender is not owner\\\");\\n        //require(msg.sender == i_owner, NotOwner());\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    //Functions\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    /**\\n     * @notice  This function funds this contract\\n     * @dev This implements price feeds as our library\\n     */\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"You need to spend more ETH!\\\"\\n        ); // 1e18 == 1*10**18 == 1(18 times 0)\\n        s_funders.push(msg.sender);\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n\\n        //call\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n        //revert();\\n    }\\n\\n    function cheaperWithdraw() public payable onlyOwner {\\n        address[] memory funders = s_funders;\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool callSuccess, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunders(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(address funder)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0x54696577a70921e14c55f6ebfc72fc554fb6ebc66f08cafb82a877fabc2bf983\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.7;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        //ABI\\n        //Address 0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\n\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n        return uint256(price * 1e10);\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n        return ethAmountInUsd;\\n    }\\n\\n    function getVersion(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        return priceFeed.version();\\n    }\\n}\\n\",\"keccak256\":\"0x7fb554f68d2f2b1f94613f393efe029c1ddd31cac640e37e36faf849ceab7439\",\"license\":\"MIT\"}},\"version\":1}",
    "bytecode": "0x60a06040523480156200001157600080fd5b506040516200131e3803806200131e833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c611198620001866000396000818161038a015281816105d801528181610628015261081e01526111986000f3fe60806040526004361061007f5760003560e01c8063893d20e81161004e578063893d20e8146101545780639e87a5cd1461017f578063b60d4288146101aa578063be2693f0146101b45761008e565b80630343fb25146100985780633a7b6c74146100d55780633ccfd60b146101125780636b69a592146101295761008e565b3661008e5761008c6101be565b005b6100966101be565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610ad0565b6102f8565b6040516100cc9190610b16565b60405180910390f35b3480156100e157600080fd5b506100fc60048036038101906100f79190610b5d565b610341565b6040516101099190610b99565b60405180910390f35b34801561011e57600080fd5b50610127610388565b005b34801561013557600080fd5b5061013e6105c8565b60405161014b9190610b16565b60405180910390f35b34801561016057600080fd5b506101696105d4565b6040516101769190610b99565b60405180910390f35b34801561018b57600080fd5b506101946105fc565b6040516101a19190610c13565b60405180910390f35b6101b26101be565b005b6101bc610626565b005b674563918244f400006101fc600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108ea90919063ffffffff16565b101561023d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023490610c8b565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102ef9190610cda565b92505081905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600080828154811061035657610355610d30565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461040d576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156104b857600080828154811061043257610431610d30565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104b090610d5f565b915050610410565b50600067ffffffffffffffff8111156104d4576104d3610da8565b5b6040519080825280602002602001820160405280156105025781602001602082028036833780820191505090505b50600090805190602001906105189291906109c6565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161053f90610e08565b60006040518083038185875af1925050503d806000811461057c576040519150601f19603f3d011682016040523d82523d6000602084013e610581565b606091505b50509050806105c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105bc90610e69565b60405180910390fd5b50565b674563918244f4000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106ab576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008080548060200260200160405190810160405280929190818152602001828054801561072e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106e4575b5050505050905060005b81518110156107b957600082828151811061075657610755610d30565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806107b190610d5f565b915050610738565b50600067ffffffffffffffff8111156107d5576107d4610da8565b5b6040519080825280602002602001820160405280156108035781602001602082028036833780820191505090505b50600090805190602001906108199291906109c6565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161086090610e08565b60006040518083038185875af1925050503d806000811461089d576040519150601f19603f3d011682016040523d82523d6000602084013e6108a2565b606091505b50509050806108e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108dd90610e69565b60405180910390fd5b5050565b6000806108f683610926565b90506000670de0b6b3a7640000858361090f9190610e89565b6109199190610f12565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561096f57600080fd5b505afa158015610983573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a79190610fd0565b5050509150506402540be400816109be919061104b565b915050919050565b828054828255906000526020600020908101928215610a3f579160200282015b82811115610a3e5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109e6565b5b509050610a4c9190610a50565b5090565b5b80821115610a69576000816000905550600101610a51565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a9d82610a72565b9050919050565b610aad81610a92565b8114610ab857600080fd5b50565b600081359050610aca81610aa4565b92915050565b600060208284031215610ae657610ae5610a6d565b5b6000610af484828501610abb565b91505092915050565b6000819050919050565b610b1081610afd565b82525050565b6000602082019050610b2b6000830184610b07565b92915050565b610b3a81610afd565b8114610b4557600080fd5b50565b600081359050610b5781610b31565b92915050565b600060208284031215610b7357610b72610a6d565b5b6000610b8184828501610b48565b91505092915050565b610b9381610a92565b82525050565b6000602082019050610bae6000830184610b8a565b92915050565b6000819050919050565b6000610bd9610bd4610bcf84610a72565b610bb4565b610a72565b9050919050565b6000610beb82610bbe565b9050919050565b6000610bfd82610be0565b9050919050565b610c0d81610bf2565b82525050565b6000602082019050610c286000830184610c04565b92915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610c75601b83610c2e565b9150610c8082610c3f565b602082019050919050565b60006020820190508181036000830152610ca481610c68565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ce582610afd565b9150610cf083610afd565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d2557610d24610cab565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d6a82610afd565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d9d57610d9c610cab565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610df2600083610dd7565b9150610dfd82610de2565b600082019050919050565b6000610e1382610de5565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610e53600b83610c2e565b9150610e5e82610e1d565b602082019050919050565b60006020820190508181036000830152610e8281610e46565b9050919050565b6000610e9482610afd565b9150610e9f83610afd565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ed857610ed7610cab565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f1d82610afd565b9150610f2883610afd565b925082610f3857610f37610ee3565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f6281610f43565b8114610f6d57600080fd5b50565b600081519050610f7f81610f59565b92915050565b6000819050919050565b610f9881610f85565b8114610fa357600080fd5b50565b600081519050610fb581610f8f565b92915050565b600081519050610fca81610b31565b92915050565b600080600080600060a08688031215610fec57610feb610a6d565b5b6000610ffa88828901610f70565b955050602061100b88828901610fa6565b945050604061101c88828901610fbb565b935050606061102d88828901610fbb565b925050608061103e88828901610f70565b9150509295509295909350565b600061105682610f85565b915061106183610f85565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156110a05761109f610cab565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156110dd576110dc610cab565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561111a57611119610cab565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561115757611156610cab565b5b82820290509291505056fea2646970667358221220d259c6b2a8c26390a66b856e39b259099e39717d26f8845965d09d3872619f9e64736f6c63430008080033",
    "deployedBytecode": "0x60806040526004361061007f5760003560e01c8063893d20e81161004e578063893d20e8146101545780639e87a5cd1461017f578063b60d4288146101aa578063be2693f0146101b45761008e565b80630343fb25146100985780633a7b6c74146100d55780633ccfd60b146101125780636b69a592146101295761008e565b3661008e5761008c6101be565b005b6100966101be565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610ad0565b6102f8565b6040516100cc9190610b16565b60405180910390f35b3480156100e157600080fd5b506100fc60048036038101906100f79190610b5d565b610341565b6040516101099190610b99565b60405180910390f35b34801561011e57600080fd5b50610127610388565b005b34801561013557600080fd5b5061013e6105c8565b60405161014b9190610b16565b60405180910390f35b34801561016057600080fd5b506101696105d4565b6040516101769190610b99565b60405180910390f35b34801561018b57600080fd5b506101946105fc565b6040516101a19190610c13565b60405180910390f35b6101b26101be565b005b6101bc610626565b005b674563918244f400006101fc600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108ea90919063ffffffff16565b101561023d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023490610c8b565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102ef9190610cda565b92505081905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600080828154811061035657610355610d30565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461040d576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156104b857600080828154811061043257610431610d30565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104b090610d5f565b915050610410565b50600067ffffffffffffffff8111156104d4576104d3610da8565b5b6040519080825280602002602001820160405280156105025781602001602082028036833780820191505090505b50600090805190602001906105189291906109c6565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161053f90610e08565b60006040518083038185875af1925050503d806000811461057c576040519150601f19603f3d011682016040523d82523d6000602084013e610581565b606091505b50509050806105c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105bc90610e69565b60405180910390fd5b50565b674563918244f4000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106ab576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008080548060200260200160405190810160405280929190818152602001828054801561072e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106e4575b5050505050905060005b81518110156107b957600082828151811061075657610755610d30565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806107b190610d5f565b915050610738565b50600067ffffffffffffffff8111156107d5576107d4610da8565b5b6040519080825280602002602001820160405280156108035781602001602082028036833780820191505090505b50600090805190602001906108199291906109c6565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161086090610e08565b60006040518083038185875af1925050503d806000811461089d576040519150601f19603f3d011682016040523d82523d6000602084013e6108a2565b606091505b50509050806108e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108dd90610e69565b60405180910390fd5b5050565b6000806108f683610926565b90506000670de0b6b3a7640000858361090f9190610e89565b6109199190610f12565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561096f57600080fd5b505afa158015610983573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a79190610fd0565b5050509150506402540be400816109be919061104b565b915050919050565b828054828255906000526020600020908101928215610a3f579160200282015b82811115610a3e5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109e6565b5b509050610a4c9190610a50565b5090565b5b80821115610a69576000816000905550600101610a51565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a9d82610a72565b9050919050565b610aad81610a92565b8114610ab857600080fd5b50565b600081359050610aca81610aa4565b92915050565b600060208284031215610ae657610ae5610a6d565b5b6000610af484828501610abb565b91505092915050565b6000819050919050565b610b1081610afd565b82525050565b6000602082019050610b2b6000830184610b07565b92915050565b610b3a81610afd565b8114610b4557600080fd5b50565b600081359050610b5781610b31565b92915050565b600060208284031215610b7357610b72610a6d565b5b6000610b8184828501610b48565b91505092915050565b610b9381610a92565b82525050565b6000602082019050610bae6000830184610b8a565b92915050565b6000819050919050565b6000610bd9610bd4610bcf84610a72565b610bb4565b610a72565b9050919050565b6000610beb82610bbe565b9050919050565b6000610bfd82610be0565b9050919050565b610c0d81610bf2565b82525050565b6000602082019050610c286000830184610c04565b92915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610c75601b83610c2e565b9150610c8082610c3f565b602082019050919050565b60006020820190508181036000830152610ca481610c68565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ce582610afd565b9150610cf083610afd565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d2557610d24610cab565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d6a82610afd565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d9d57610d9c610cab565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610df2600083610dd7565b9150610dfd82610de2565b600082019050919050565b6000610e1382610de5565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610e53600b83610c2e565b9150610e5e82610e1d565b602082019050919050565b60006020820190508181036000830152610e8281610e46565b9050919050565b6000610e9482610afd565b9150610e9f83610afd565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ed857610ed7610cab565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f1d82610afd565b9150610f2883610afd565b925082610f3857610f37610ee3565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f6281610f43565b8114610f6d57600080fd5b50565b600081519050610f7f81610f59565b92915050565b6000819050919050565b610f9881610f85565b8114610fa357600080fd5b50565b600081519050610fb581610f8f565b92915050565b600081519050610fca81610b31565b92915050565b600080600080600060a08688031215610fec57610feb610a6d565b5b6000610ffa88828901610f70565b955050602061100b88828901610fa6565b945050604061101c88828901610fbb565b935050606061102d88828901610fbb565b925050608061103e88828901610f70565b9150509295509295909350565b600061105682610f85565b915061106183610f85565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156110a05761109f610cab565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156110dd576110dc610cab565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561111a57611119610cab565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561115757611156610cab565b5b82820290509291505056fea2646970667358221220d259c6b2a8c26390a66b856e39b259099e39717d26f8845965d09d3872619f9e64736f6c63430008080033",
    "devdoc": {
        "author": "Surinder Kumar",
        "details": "This implements price feeds as our library",
        "kind": "dev",
        "methods": {
            "fund()": {
                "details": "This implements price feeds as our library"
            }
        },
        "title": "A contract for crowd funding",
        "version": 1
    },
    "userdoc": {
        "kind": "user",
        "methods": {
            "fund()": {
                "notice": "This function funds this contract"
            }
        },
        "notice": "This contract is to demo a simple funding contract",
        "version": 1
    },
    "storageLayout": {
        "storage": [
            {
                "astId": 58,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_funders",
                "offset": 0,
                "slot": "0",
                "type": "t_array(t_address)dyn_storage"
            },
            {
                "astId": 62,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_addressToAmountFunded",
                "offset": 0,
                "slot": "1",
                "type": "t_mapping(t_address,t_uint256)"
            },
            {
                "astId": 72,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_priceFeed",
                "offset": 0,
                "slot": "2",
                "type": "t_contract(AggregatorV3Interface)45"
            }
        ],
        "types": {
            "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
                "base": "t_address",
                "encoding": "dynamic_array",
                "label": "address[]",
                "numberOfBytes": "32"
            },
            "t_contract(AggregatorV3Interface)45": {
                "encoding": "inplace",
                "label": "contract AggregatorV3Interface",
                "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => uint256)",
                "numberOfBytes": "32",
                "value": "t_uint256"
            },
            "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
            }
        }
    }
}
